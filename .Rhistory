beta0 <- t$Est[1]
beta0 <- t$Est[1]
beta0 <- t$Est[1]
t$lower <- t$Est - qt(0.975, df = 998) * t$SE
t <- coef(summary(m))
t <- data.frame(unlist(t))
colnames(t) <- c("Est", "SE", "t", "p")
t
t$calct <- (t$Est - 0)/t$SE
t$calcp <- 2 * pt(t$calct, df = 998, lower.tail = FALSE)  # x2 because is 2-tailed test
t
t$lower <- t$Est - qt(0.975, df = 998) * t$SE
t$upper <- t$Est + qt(0.975, df = 998) * t$SE
ci <- c(t$lower, t$upper)  # by hand
ci
beta0 <- t$Est[1]
beta1 <- t$Est[2]
h_hat <- beta1 * 150 + beta0
h_hat
h_hat_difference <- (beta1 * 220 + beta0) - (beta1 * 180 + beta0)
h_hat_difference
m <- lm(data = d, height ~ weight)
h_hat <- predict(m, newdata = data.frame(weight = d$weight))
df <- data.frame(cbind(d$weight, d$height, h_hat))
names(df) <- c("x", "y", "yhat")
head(df)
g <- ggplot(data = df, aes(x = x, y = yhat))
g <- g + geom_point()
g <- g + geom_point(aes(x = x, y = y), colour = "red")
g <- g + geom_segment(aes(x = x, y = yhat, xend = x, yend = y))
g
knitr::opts_chunk$set(echo = TRUE)
sample(d, 30, replace = FALSE, prob = NULL)
View(d)
POP30<- sample(id, 30, replace = FALSE, prob = NULL)
attach(d)
POP30<- sample(id, 30, replace = FALSE, prob = NULL)
mean(POP30(height, 30, replace = FALSE, prob = NULL))
mean(POP30,height)
detach(d)
attach(POP30)
attach(d)
POP30
View(g)
View(d)
detach(d)
View(d)
POP30<- sample(d, 30, replace = FALSE, prob = NULL)
mean(sample(weight, 30, replace = FALSE, prob = NULL))
sample(d, 30, replace = FALSE, prob = NULL)
sample(d, 30, replace = FALSE)
sample(d,30, replace = FALSE)
View(d)
sample_v<-function (d){sample(d,30, replace = FALSE)}
smaple_v
sample_v
mean(sample(weight, 30, replace = FALSE, prob = NULL))
attach(d)
mean(sample(weight, 30, replace = FALSE, prob = NULL))
sd(sample(weight, 30, replace = FALSE, prob = NULL))
Pop30<- sample(d,30, replace = FALSE, prob = NULL)
mean(sample(height, 30, replace = FALSE, prob = NULL))
sd(sample(height, 30, replace = FALSE, prob = NULL))
mean(sample(weight, 30, replace = FALSE, prob = NULL))
sd(sample(weight, 30, replace = FALSE, prob = NULL))
mean(sample(age, 30, replace = FALSE, prob = NULL))
sd(sample(age, 30, replace = FALSE, prob = NULL))
sample30<-d[sample(1:nrow(d), 30,
replace=FALSE),]
attach(sample30)
detach(d)
attach(sample30)
mean(sample30,height)
mean(sample30$height)
mean(sample30$height)
sd(sample30$height)
summary(sample30)
mean(sample30$height)
sd(sample30$height)
mean(sample30$weight)
sd(sample30$weight)
mean(sample30$age)
sd(sample30$age)
mean(sample30$height)
sd(sample30$height)
mean(sample30$weight)
sd(sample30$weight)
mean(sample30$age)
sd(sample30$age)
mean(sample30$zombies_killed)
sd(sample30$zombies_killed)
mean(sample30$years_of_education)
sd(sample30$years_of_education)
mean(sample30$gender)
sd(sample30$gender)
hist(height)
hist(weight)
hist(age)
hist(zombies_killed)
hist(years_of_education)
qqnorm(height,main="Normal QQ plot height")
qqline(height,col="gray")
qqnorm(weight,main="Normal QQ plot weight")
qqline(weight,col="gray")
qqnorm(age,main="Normal QQ plot age")
qqline(weight,col="gray")
qqnorm(zombies_killed,main="Normal QQ plot zombies killed")
qqline(zombies_killed,col="gray")
hist(zombies_killed)
qqnorm(years_of_education,main="Normal QQ plot years of education")
qqline(years_of_education,col="gray")
hist(years_of_education)
qqnorm(height,main="Normal QQ plot height")
qqline(height,col="gray")
hist(height)
qqnorm(weight,main="Normal QQ plot weight")
qqline(weight,col="gray")
hist(weight)
qqnorm(age,main="Normal QQ plot age")
qqline(weight,col="gray")
qqnorm(zombies_killed,main="Normal QQ plot zombies killed")
qqline(zombies_killed,col="gray")
hist(zombies_killed)
qqnorm(years_of_education,main="Normal QQ plot years of education")
qqline(years_of_education,col="gray")
hist(years_of_education)
qqnorm(height,main="Normal QQ plot height")
qqline(height,col="gray")
hist(height)
qqnorm(weight,main="Normal QQ plot weight")
qqline(weight,col="gray")
hist(weight)
qqnorm(age,main="Normal QQ plot age")
qqline(weight,col="gray")
hist(age)
qqnorm(zombies_killed,main="Normal QQ plot zombies killed")
qqline(zombies_killed,col="gray")
hist(zombies_killed)
qqnorm(years_of_education,main="Normal QQ plot years of education")
qqline(years_of_education,col="gray")
hist(years_of_education)
mean(sample30$weight)
sd(sample30$weight)
var(weight)
qqnorm(weight,main="Normal QQ plot weight")
qqline(weight,col="gray")
hist(weight)
library(sciplot)
se(height)
mean(sample30$height)
sd(sample30$height)
se(height)
mean(sample30$weight)
sd(sample30$weight)
se(weight)
mean(sample30$age)
sd(sample30$age)
se(age)
mean(sample30$zombies_killed)
sd(sample30$zombies_killed)
se(zombies_killed)
mean(sample30$years_of_education)
sd(sample30$years_of_education)
se(years_of_education)
t.test(weight)
detach(sample30)
attach(d)
knitr::opts_chunk$set(echo = TRUE)
install.packages("sciplot")
set <- NULL # sets up a dummy variable to hold our 10000 simulations
n <- 15
for (i in 1:10000){
set[i] <- mean(sample(x, n, replace=TRUE))
}
quantile(set)
quantile(set, c(0.025, 0.975))
install.packages("sciplot")
knitr::opts_chunk$set(echo = TRUE)
set <- NULL # sets up a dummy variable to hold our 10000 simulations
n <- 30
for (i in 1:99){
set[i] <- mean(sample(d, 30, replace=TRUE))
summary(set)
set <- NULL # sets up a dummy variable to hold our 10000 simulations
n <- 30
for (i in 1:99){
set[i] <- mean(sample(d, 30, replace=TRUE))
}
summary(set)
k <- 99 # number of samples
n <- 30 # size of each sample
s <- NULL # dummy variable to hold each sample
for (i in 1:k){
s[[i]] <- sample(d,size=n, replace=FALSE)
}
head(s)
summary(s)
attach(d)
k <- 99 # number of samples
n <- 30 # size of each sample
s <- NULL # dummy variable to hold each sample
for (i in 1:k){
s[[i]] <- sample(d,size=n, replace=FALSE)
}
head(s)
sample99<-replicate(99,sample(nrow(30), 10, replace = FALSE))
sample99
sample99<-replicate(99,sample(nrow(30), 10, replace = FALSE))
sample99
attach(d)
sample99<-replicate(99,d[sample(nrow(30), 10, replace = FALSE),])
sample99
sample99<-replicate(99,data=d[sample(nrow(30), 10, replace = FALSE),])
sample99
detach(d)
attach(sample30)
lower <- mean(sample30$height) - qt(1 - 0.05/2, df = 29) * se(height)
upper <- mean(sample30$height) + qt(1 - 0.05/2, df = 29) * se(height)
HeightCI_t <- c(lower, upper)
HeightCI_t
lower <- mean(sample30$height) - qt(1 - 0.05/2, df = 29) * se(height)
upper <- mean(sample30$height) + qt(1 - 0.05/2, df = 29) * se(height)
HeightCI_t <- c(lower, upper)
HeightCI_t
lower <- mean(sample30$height) - qt(1 - 0.05/2, df = 29) * se(sample30$height)
upper <- mean(sample30$height) + qt(1 - 0.05/2, df = 29) * se(sample30$height)
HeightCI_t <- c(lower, upper)
HeightCI_t
mean(sample30$height)
sd(sample30$height)
se(sample30$height)
library(sciplot)
sample30<-d[sample(1:nrow(d), 30,
replace=FALSE),]
attach(sample30)
summary(sample30)
library(curl)
f <- f <- curl("https://raw.githubusercontent.com/fuzzyatelin/fuzzyatelin.github.io/master/AN597_Fall19/zombies.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
summary(d)
attach(d)
mean(height)
Height_sigma<- sqrt(sum((height - mean(height))^2)/length(height))
Height_sigma
mean(weight)
weight_sigma<- sqrt(sum((weight - mean(weight))^2)/length(weight))
weight_sigma
mean(age)
age_sigma<- sqrt(sum((age - mean(age))^2)/length(age))
age_sigma
mean(zombies_killed)
zombiesKilled_sigma<- sqrt(sum((zombies_killed - mean(zombies_killed))^2)/length(zombies_killed))
zombiesKilled_sigma
mean(years_of_education)
yearsofedu_sigma<- sqrt(sum((years_of_education - mean(years_of_education))^2)/length(years_of_education))
yearsofedu_sigma
library(curl)
f <- f <- curl("https://raw.githubusercontent.com/fuzzyatelin/fuzzyatelin.github.io/master/AN597_Fall19/zombies.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
summary(d)
attach(d)
mean(height)
Height_sigma<- sqrt(sum((height - mean(height))^2)/length(height))
Height_sigma
mean(weight)
weight_sigma<- sqrt(sum((weight - mean(weight))^2)/length(weight))
weight_sigma
mean(age)
age_sigma<- sqrt(sum((age - mean(age))^2)/length(age))
age_sigma
mean(zombies_killed)
zombiesKilled_sigma<- sqrt(sum((zombies_killed - mean(zombies_killed))^2)/length(zombies_killed))
zombiesKilled_sigma
mean(years_of_education)
yearsofedu_sigma<- sqrt(sum((years_of_education - mean(years_of_education))^2)/length(years_of_education))
yearsofedu_sigma
library(ggplot2)
#height by gender
boxplot(height~gender,main="Boxplot of Height by gender", ylab = "height (inches)", names=c("Females", "Males"))
#weight by gender
boxplot(weight~gender,main="Boxplot of weight by gender", ylab = "weight (lbs)", names=c("Females", "Males"))
#age by gender
boxplot(age~gender,main="Boxplot of age by gender", ylab = "age", names=c("Females", "Males"))
#number of zombies killed  by gender
boxplot(zombies_killed~gender,main="Boxplot of zombies killed by gender", ylab = "zombies killed", names=c("Females", "Males"))
#number of years of education  by gender
boxplot(years_of_education~gender,main="Boxplot of years of education by gender", ylab = "years of education", names=c("Females", "Males"))
plot(age, height, main = "Scatterplot age and height", xlab = "Age", ylab = "height")
plot(x= log(age), y= log(height))
plot(age, weight, main = "Scatterplot age and weight", xlab = "Age", ylab = "weight")
plot(x= log(age), y= log(weight))
qqnorm(height,main="Normal QQ plot height")
qqline(height,col="gray")
qqnorm(weight,main="Normal QQ plot weight")
qqline(weight,col="gray")
qqnorm(age,main="Normal QQ plot age")
qqline(weight,col="gray")
qqnorm(zombies_killed,main="Normal QQ plot zombies killed")
qqline(zombies_killed,col="gray")
hist(zombies_killed)
#zombies killed does not drawn from a normal distribution
qqnorm(years_of_education,main="Normal QQ plot years of education")
qqline(years_of_education,col="gray")
hist(years_of_education)
#years of education does not drawn from a normal distribution
library(sciplot)
sample30<-d[sample(1:nrow(d), 30,
replace=FALSE),]
detach(d)
attach(sample30)
summary(sample30)
mean(sample30$height)
sd(sample30$height)
se(sample30$height)
lower <- mean(sample30$height) - qt(1 - 0.05/2, df = 29) * se(sample30$height)
upper <- mean(sample30$height) + qt(1 - 0.05/2, df = 29) * se(sample30$height)
HeightCI_t <- c(lower, upper)
HeightCI_t
mean(sample30$weight)
sd(sample30$weight)
se(weight)
t.test(weight)
lower <- mean(sample30$weight) - qt(1 - 0.05/2, df = 29) * se(sample30$weight)
upper <- mean(sample30$weight) + qt(1 - 0.05/2, df = 29) * se(sample30$weight)
WeightCI_t <- c(lower, upper)
WeightCI_t
lower <- mean(sample30$height) - qt(1 - 0.05/2, df = 29) * se(sample30$height)
upper <- mean(sample30$height) + qt(1 - 0.05/2, df = 29) * se(sample30$height)
t.test(sample30$height)
mean(sample30$height)
sd(sample30$height)
se(sample30$height)
t.test(sample30$height)
mean(sample30$weight)
sd(sample30$weight)
se(weight)
t.test(sample30$weight)
mean(sample30$age)
sd(sample30$age)
se(age)
t.test(sample30$age)
mean(sample30$years_of_education)
sd(sample30$years_of_education)
se(sample30$years_of_education)
t.test(sample30$years_of_education)
qqnorm(years_of_education,main="Normal QQ plot years of education")
qqline(years_of_education,col="gray")
hist(years_of_education)
qqnorm(height,main="Normal QQ plot height")
qqline(height,col="gray")
hist(height)
qqnorm(weight,main="Normal QQ plot weight")
qqline(weight,col="gray")
hist(weight)
qqnorm(age,main="Normal QQ plot age")
qqline(weight,col="gray")
hist(age)
qqnorm(zombies_killed,main="Normal QQ plot zombies killed")
qqline(zombies_killed,col="gray")
hist(zombies_killed)
t.test(sample30$zombies_killed)
?replicate
?replicate
detach(sample30)
attach(d)
k <- 99 # number of samples
n <- 30 # size of each sample
s <- NULL # dummy variable to hold each sample
for (i in 1:k){
s[[i]] <- d[sample(1:nrow(d), 30,
replace=FALSE),]
}
head(s)
View(s)
m <- NULL
for (i in 1:k){
m[i] <- summary(s[[i]])
}
summary(m) # almost equal to...
m <- NULL
for (i in 1:k){
m[i] <- mean(s[[i]])
}
mean(m)
hm <- NULL
for (i in 1:k){
m[i] <- mean(height$s[[i]])
}
hm <- NULL
for (i in 1:k){
m[i] <- mean(height,s[[i]])
}
hm <- NULL
for (i in 1:k){
m[i] <- mean(height,(s[[i]]))
}
hm <- NULL
for (i in 1:k){
hm[i] <- mean(height,(s[[i]]))
}
library(curl)
f <- f <- curl("https://raw.githubusercontent.com/fuzzyatelin/fuzzyatelin.github.io/master/AN597_Fall19/zombies.csv")
d <- read.csv(f, header = TRUE, sep = ",", stringsAsFactors = FALSE)
summary(d)
attach(d)
mean(height)
Height_sigma<- sqrt(sum((height - mean(height))^2)/length(height))
Height_sigma
mean(weight)
weight_sigma<- sqrt(sum((weight - mean(weight))^2)/length(weight))
weight_sigma
mean(age)
age_sigma<- sqrt(sum((age - mean(age))^2)/length(age))
age_sigma
mean(zombies_killed)
zombiesKilled_sigma<- sqrt(sum((zombies_killed - mean(zombies_killed))^2)/length(zombies_killed))
zombiesKilled_sigma
mean(years_of_education)
yearsofedu_sigma<- sqrt(sum((years_of_education - mean(years_of_education))^2)/length(years_of_education))
yearsofedu_sigma
library(ggplot2)
#height by gender
boxplot(height~gender,main="Boxplot of Height by gender", ylab = "height (inches)", names=c("Females", "Males"))
#weight by gender
boxplot(weight~gender,main="Boxplot of weight by gender", ylab = "weight (lbs)", names=c("Females", "Males"))
#age by gender
boxplot(age~gender,main="Boxplot of age by gender", ylab = "age", names=c("Females", "Males"))
#number of zombies killed  by gender
boxplot(zombies_killed~gender,main="Boxplot of zombies killed by gender", ylab = "zombies killed", names=c("Females", "Males"))
#number of years of education  by gender
boxplot(years_of_education~gender,main="Boxplot of years of education by gender", ylab = "years of education", names=c("Females", "Males"))
plot(age, height, main = "Scatterplot age and height", xlab = "Age", ylab = "height")
plot(x= log(age), y= log(height))
plot(age, weight, main = "Scatterplot age and weight", xlab = "Age", ylab = "weight")
plot(x= log(age), y= log(weight))
qqnorm(height,main="Normal QQ plot height")
qqline(height,col="gray")
qqnorm(weight,main="Normal QQ plot weight")
qqline(weight,col="gray")
qqnorm(age,main="Normal QQ plot age")
qqline(weight,col="gray")
qqnorm(zombies_killed,main="Normal QQ plot zombies killed")
qqline(zombies_killed,col="gray")
hist(zombies_killed)
#zombies killed does not drawn from a normal distribution
qqnorm(years_of_education,main="Normal QQ plot years of education")
qqline(years_of_education,col="gray")
hist(years_of_education)
#years of education does not drawn from a normal distribution
library(sciplot)
sample30<-d[sample(1:nrow(d), 30,
replace=FALSE),]
detach(d)
attach(sample30)
summary(sample30)
##Height
mean(sample30$height)
sd(sample30$height)
se(sample30$height)
t.test(sample30$height)
qqnorm(height,main="Normal QQ plot height")
qqline(height,col="gray")
hist(height)
##Weight
mean(sample30$weight)
sd(sample30$weight)
se(weight)
t.test(sample30$weight)
qqnorm(weight,main="Normal QQ plot weight")
qqline(weight,col="gray")
hist(weight)
##Age
mean(sample30$age)
sd(sample30$age)
se(age)
t.test(sample30$age)
qqnorm(age,main="Normal QQ plot age")
qqline(weight,col="gray")
hist(age)
##Zombies killed
mean(sample30$zombies_killed)
sd(sample30$zombies_killed)
se(sample30$zombies_killed)
t.test(sample30$zombies_killed)### CI are not done, I need to use another function or code because this is for normal and this variable is right skewed
qqnorm(zombies_killed,main="Normal QQ plot zombies killed")
qqline(zombies_killed,col="gray")
hist(zombies_killed)
##Years of education
mean(sample30$years_of_education)
sd(sample30$years_of_education)
se(sample30$years_of_education)
t.test(sample30$years_of_education)### CI are not done, I need to use another function or code because this is for normal and this variable is right skewed
qqnorm(years_of_education,main="Normal QQ plot years of education")
qqline(years_of_education,col="gray")
hist(years_of_education)
detach(sample30)
attach(d)
k <- 99 # number of samples
n <- 30 # size of each sample
s <- NULL # dummy variable to hold each sample
for (i in 1:k){
s[[i]] <- d[sample(1:nrow(d), 30,
replace=FALSE),]
}
head(s)
## I could do the 99 random samples but I do not know how to extract the mean of each variable
##this code does not work
##hm <- NULL
##for (i in 1:k){
##    hm[i] <- mean(s[[i]])
##    }
##mean(hm)
